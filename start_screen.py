# -*- coding: utf-8 -*-
import hashlib
from socket import socket

# Form implementation generated from reading ui file 'StartScreen.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QLineEdit, QPushButton, QLabel, QWidget

SERVER_IP = '127.0.0.1'  # '10.100.102.14'
PORT = 8080


class MainWindow(object):
    def __init__(self):
        self.login_fail_label = None
        self.menubar = None
        self.create_account_button = None
        self.create_account_label = None
        self.login_button = None
        self.password_input = None
        self.username_input = None
        self.password_label = None
        self.username_label = None
        self.label = None
        self.centralwidget = None

    def setup_ui(self, main_window):
        main_window.setWindowTitle("FileSpace")
        main_window.resize(460, 600)
        main_window.setMouseTracking(True)
        main_window.setTabletTracking(True)
        central_widget = QWidget()
        main_window.setCentralWidget(central_widget)

        label = QLabel(central_widget)
        label.setGeometry(QtCore.QRect(134, 60, 191, 51))
        label.setText("FileSpace")
        font = QtGui.QFont()
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        label.setFont(font)

        username_label = QLabel(central_widget)
        username_label.setGeometry(QtCore.QRect(50, 150, 101, 23))
        username_label.setText("Username")
        font = QtGui.QFont()
        font.setPointSize(16)
        username_label.setFont(font)

        password_label = QLabel(central_widget)
        password_label.setGeometry(QtCore.QRect(50, 210, 101, 31))
        password_label.setText("Password")
        font = QtGui.QFont()
        font.setPointSize(16)
        password_label.setFont(font)

        self.username_input = QLineEdit(central_widget)
        self.username_input.setGeometry(QtCore.QRect(180, 150, 230, 31))
        self.username_input.keyPressEvent = lambda event: event.ignore() if event.key() == Qt.Key_Space else \
            QLineEdit.keyPressEvent(self.username_input, event)  # Disable space key

        self.password_input = QLineEdit(central_widget)
        self.password_input.setGeometry(QtCore.QRect(180, 210, 230, 31))
        self.password_input.setEchoMode(QLineEdit.Password)
        self.password_input.keyPressEvent = lambda event: event.ignore() if event.key() == Qt.Key_Space else \
            QLineEdit.keyPressEvent(self.password_input, event)  # Disable space key

        login_button = QPushButton(central_widget)
        login_button.setGeometry(QtCore.QRect(180, 290, 100, 35))
        login_button.setText("Log In")
        font = QtGui.QFont()
        font.setPointSize(16)
        login_button.setFont(font)
        login_button.clicked.connect(self.login)

        create_account_label = QLabel(central_widget)
        create_account_label.setGeometry(QtCore.QRect(50, 350, 171, 30))
        create_account_label.setText("Don\'t have an account?")
        font = QtGui.QFont()
        font.setPointSize(12)
        create_account_label.setFont(font)

        signup_button = QPushButton(central_widget)
        signup_button.setGeometry(QtCore.QRect(220, 350, 100, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        signup_button.setFont(font)
        signup_button.setStyleSheet("color: rgb(0, 0, 255)")
        signup_button.setFlat(True)
        signup_button.setText("Sign Up")

        self.login_fail_label = create_fail_label(central_widget, "Login Failed - Invalid username or password",
                                                  (85, 260, 285, 18))

    def login(self):
        username = self.username_input.text()
        password = self.password_input.text()
        if username == '' or password == '':
            return
        # perform login logic here
        print("Username:", username)
        print("Password:", password)
        # Create a new socket and connect to the server
        client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        client_socket.connect((SERVER_IP, PORT))
        # Send the username and password to the server for verification
        client_socket.send(f"login {username} {hashlib.md5(password.encode()).hexdigest()}".encode())

        # Receive the server's response
        response = client_socket.recv(1024).decode().strip()

        # Close the client socket
        client_socket.close()

        # Check the server's response and show an appropriate message
        if response == "OK":
            # Welcome message
            print(f"Login Successful - Welcome, {username}!")

            # Show the download and upload buttons
        else:
            print("Login Failed - Invalid username or password")
            self.login_fail_label.show()


def create_fail_label(parent, text, geometry):
    fail_label = QtWidgets.QLabel(parent)
    fail_label.setGeometry(QtCore.QRect(geometry[0], geometry[1], geometry[2], geometry[3]))
    fail_label.setText(text)
    fail_label.hide()
    font = QtGui.QFont()
    font.setPointSize(11)
    fail_label.setFont(font)
    fail_label.setStyleSheet("color: rgb(255, 0, 0)")
    return fail_label


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    main_win = QtWidgets.QMainWindow()
    ui = MainWindow()
    ui.setup_ui(main_win)
    main_win.show()
    sys.exit(app.exec_())
